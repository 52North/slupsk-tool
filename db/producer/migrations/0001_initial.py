# Generated by Django 2.2.3 on 2019-12-19 12:42

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ingredient', '0002_auto_20191217_1637'),
        ('shop', '0002_auto_20190822_1340'),
    ]

    operations = [
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Name')),
                ('adress', models.TextField(blank=True, null=True, verbose_name='Adress')),
                ('toggle', models.CharField(blank=True, choices=[('gps', 'Use GPS'), ('interactive', 'Point on Map'), ('manual', 'Enter Manually')], max_length=11, null=True, verbose_name='Location Mode')),
                ('geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='Location')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('accuracy', models.FloatField(blank=True, null=True, verbose_name='GPS Accuracy')),
            ],
            options={
                'verbose_name': 'producer',
                'verbose_name_plural': 'producers',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(blank=True, null=True, verbose_name='Quantity (kg)')),
                ('frequency', models.TextField(blank=True, help_text='If you deliver this product regularly, please insert the delivery frequency, e.g. once per week.', null=True, verbose_name='Frequency')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Price per item/kg (PLN)')),
                ('production_mode', models.CharField(blank=True, choices=[('organic_certificate', 'Organic with certificate'), ('organic_no_certificate', 'Organic without certificate'), ('traditional', 'Traditional'), ('industrial', 'Industrial')], max_length=22, null=True, verbose_name='Mode of production')),
                ('distance_to_shop', models.FloatField(blank=True, help_text='To calculate the distance you can use the line tool in the map above.', null=True, verbose_name='Distance to shop')),
                ('biodegradable_product', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('uncertain', 'Don&#x27;t know')], max_length=9, null=True, verbose_name='Was it biodegradable?')),
                ('recyclable_product_package', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No'), ('uncertain', 'Don&#x27;t know')], max_length=9, null=True, verbose_name='Was it in recycling packages?')),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliverys', to='producer.Producer')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ingredient.Ingredient', verbose_name='Product delivered')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Shop', verbose_name='Shop delivered')),
            ],
            options={
                'verbose_name': 'delivery',
                'verbose_name_plural': 'deliverys',
            },
        ),
    ]
